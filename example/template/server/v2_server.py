# Generated by BabelAPI

import json
from collections import OrderedDict
from bottle import (
    HTTPResponse,
    request,
    response,
    route,
    run,
)

from babelapi.data_type import OrderedExample

def segmentation_response(header, body, *segments):
    """Constructs HTTP headers and body for a segmentation response."""
    response_json = []

    for segment in segments:
        response_json.append(segment)

    if len(response_json) == 1:
        response_json = response_json[0]

    if header:
        response.headers['Dropbox-API-Result'] = json.dumps(response_json, indent=2)
        if body:
            return open('v2_server.babelt.py')
    else:
        # Manually convert json to a string because bottle only dumps json for
        # dicts, and not lists.
        response.content_type = 'application/json'
        return json.dumps(response_json)

@route('/2/users/info', method=['POST'])
def users_info():
    return segmentation_response(
        False,
        False,
        {'me': OrderedExample([('account_id', 'dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc'), ('email', 'franz@dropbox.com'), ('country', 'US'), ('locale', 'en'), ('referral_link', 'https://db.tt/ZITNuhtI'), ('is_paired', True), ('name', OrderedExample([('given_name', 'Franz'), ('surname', 'Ferdinand'), ('familiar_name', 'Franz Ferdinand'), ('display_name', 'Franz Ferdinand (Personal)')])), ('space', OrderedExample([('quota', 1000000), ('private', 1000), ('shared', 500), ('datastores', 42)])), ('team', OrderedExample([('id', 'dbtid:AAFdgehTzw7WlXhZJsbGCLePe8RvQGYDr-I'), ('name', 'Acme, Inc.')]))])},
    )

@route('/2/users/infome', method=['POST'])
def users_info_me():
    return segmentation_response(
        False,
        False,
        {'me': OrderedExample([('account_id', 'dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc'), ('email', 'franz@dropbox.com'), ('country', 'US'), ('locale', 'en'), ('referral_link', 'https://db.tt/ZITNuhtI'), ('is_paired', True), ('name', OrderedExample([('given_name', 'Franz'), ('surname', 'Ferdinand'), ('familiar_name', 'Franz Ferdinand'), ('display_name', 'Franz Ferdinand (Personal)')])), ('space', OrderedExample([('quota', 1000000), ('private', 1000), ('shared', 500), ('datastores', 42)])), ('team', OrderedExample([('id', 'dbtid:AAFdgehTzw7WlXhZJsbGCLePe8RvQGYDr-I'), ('name', 'Acme, Inc.')]))])},
    )


run(host='localhost', port=8080, debug=True, reloader=True)
