namespace users

alias AccountId = String(min_length=40, max_length=40)

struct Usage
    "Information about a user's space usage and quota."

    quota UInt64
        "The user's total quota allocation (bytes)."
    usage_individual UInt64
        "The user's used quota not including shared folders (bytes)."
    usage_shared UInt64
        "The user's used quota in shared folders (bytes)."
    usage_datastores UInt64
        "The user's used quota in datastores (bytes)."

    example default
        quota=1000000000
        usage_individual=314159265
        usage_shared=3589793
        usage_datastores=16384

struct Team
    "Information about a team."

    id String
        "The team's unique ID."
    name String
        "The name of the team."

    example default
        id="dbtid:AAFdgehTzw7WlXhZJsbGCLePe8RvQGYDr-I"
        name="Acme, Inc."

# TODO(kelkabany): Consider moving display_name to BasicAccountInfo as account_name

struct Name
    "Contains several ways a name might be represented to make
    internationalization more convenient."

    given_name String
        "Also known as a first name."
    surname String
        "Also known as a last name or family name."
    familiar_name String
        "Locale-dependent name. In the US, a person's familiar name is their
        :field:`given_name`, but elsewhere, it could be any combination of a
        person's :field:`given_name` and :field:`surname`."
    display_name String
        "A name that can be used directly to represent the name of a user's
        Dropbox account."

    example default
        given_name="Franz"
        surname="Ferdinand"
        familiar_name="Franz"
        display_name="Franz Ferdinand (Personal)"

struct Account
    "The amount of detail revealed about an account depends on the user
    being queried and the user making the query."

    account_id AccountId
        "The user's unique Dropbox ID."
    name Name
        "Details of a user's name."

struct BasicAccount extends Account
    "Basic information about any account."

    is_teammate Boolean
        "Whether this user is a teammate of the current user. If this account
        is the current user's account, then this will be :val:`true`."

struct FullAccount extends Account
    "Detailed information about the current user's account."

    email String
        "The user's e-mail address."
    country String(min_length=2, max_length=2)?
        "The user's two-letter country code, if available. Country codes are
        based on :link:`ISO 3166-1 http://en.wikipedia.org/wiki/ISO_3166-1`."
    locale String(min_length=2, max_length=2)
        "The language that the user specified. Locale tags will be
        :link:`IETF language tags http://en.wikipedia.org/wiki/IETF_language_tag`."
    referral_link String
        "The user's :link:`referral link https://www.dropbox.com/referrals`."
    usage Usage
        "The user's quota."
    team Team?
        "If this account is a member of a team, information about that team."
    is_paired Boolean
        "Whether the user has a personal and work account. If the current
        account is personal, then :field:`team` will always be :val:`Null`,
        but :field:`is_paired` will indicate if a work account is linked."

    example default "Paired account"
        account_id="dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
        email="franz@dropbox.com"
        country="US"
        locale="en"
        referral_link="https://db.tt/ZITNuhtI"
        is_paired=true

    example unpaired "Unpaired account"
        account_id="dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
        email="franz@gmail.com"
        country="US"
        locale="en"
        referral_link="https://db.tt/ZITNuhtI"
        team=null
        is_paired=false

struct GetAccountReq
    account_id AccountId
        "A user's account identifier."

union GetAccountError
    no_account Any
        "The specified :field:`account_id` does not exist."
    unknown*

route GetAccount /get_account (GetAccountReq, BasicAccount, GetAccountError)
    "Get information about a user's account."

route GetMyAccount /get_my_account (Empty, FullAccount, Empty)
    "Get information about the current user's account."
